---

import ThemeSwitcher from '../ThemeSwitcher';
import PcIcon from './PcIcon.astro';

const { currentPage } = Astro.props;
export const SITE = {
  title: "@iftakhar/ui",
  description: "Astro theme to build your design system fast.",
  defaultLanguage: "en_US",
  github: "iftakharul28/iftakhar-ui",
  linkedin: "iftakharul-alam",
};
---

<header class="sticky top-0 z-10 p-2.5 bg-slate-100 bg-opacity-80 backdrop-blur-md border-b text-slate-900">
	<nav title="Top Navigation" class="max-w-7xl mx-auto flex justify-between items-center px-4">
		<a class="text-lg font-medium" href="/">
			<h1 class="mt-0 text-blue-600 dark:text-blue-600">
				{SITE.title ?? "Documentation"}
			</h1>
		</a>
		<div class="flex gap-2">
		{
			SITE.github &&
			(<a title="Github" class="opacity-80 hover:opacity-100 hover:bg-slate-200 p-2 rounded-full transition-colors" href={'https://github.com/'+SITE.github}>
				<img class="h-7" src="/github.svg" alt="github logo">
			</a>)
		}
		{
			SITE.linkedin &&
			(<a title="linkedin" class="opacity-80 hover:opacity-100 hover:bg-blue-50 p-2 rounded-full transition-colors" href={'https://linkedin.com/in/'+SITE.linkedin}>
				<img class="h-7" src="/linkedin.svg" alt="linkedin logo">
			</a>)
		}
		
		<ThemeSwitcher client:only />
		<button id="sitebar_action_btn" class="text-neutral-400 transition-colors hover:text-neutral-50 md:hidden svelte-1yeouod" type="button">
			<svg width="24" height="24" stroke="currentColor" stroke-width="2" class="lucide-icon lucide lucide-menu square-6" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke-linecap="round" stroke-linejoin="round"><line x1="4" x2="20" y1="12" y2="12"></line><line x1="4" x2="20" y1="6" y2="6"></line><line x1="4" x2="20" y1="18" y2="18"></line></svg> <span class="sr-only" data-svelte-h="svelte-1t6m3jq">Toggle Menu</span></button>
		
		</div>
	</nav>
</header>

<script is:inline> 


	const toggle = document.querySelector('#toggle');
	toggle.addEventListener('click', () => {
	console.log("theme")  
    const theme = document.documentElement.classList.contains('dark-theme') ? 'light-theme' : 'dark-theme';
	

	const html = document.documentElement;
  html.classList.remove('dark-theme', 'light-theme'); // Remove previous theme classes
  html.classList.add(theme); // Add the specified theme class
    });
</script>
